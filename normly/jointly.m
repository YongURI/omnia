function [joint,MLE,ly,f] = jointly(x,p1,p2,plt,nglog)
% [joint,MLE,ly,f] = JOINTLY(x,p1,p2,plt,nglog)
%
% JOINTLY.M is simply cpsumly.m when the generating distribution is
% assumed to be known
%
% The MLE here is the most likely changepoint, and is the basis for
% the 'km' changepoint estimator (minimum of the AIC function) in
% cpest.m
%
% Slides down every index of x and splits signal left/right and
% calculates likelihood that left/right were generated from a normal
% distribution with p1/p2 parameters. The MLE, a sample changepoint
% index, is analogous to km (the minimum estimator) of cpest.m. Like
% cpgen.m & cpest.m, lhs includes current index (lhs = x(1:index));
% rhs current index plus one to end (rhs = x(index+1:end)).
%
% Input:
% x             The signal (1D data vector)
% p1,2          Cells of {mu sigma}; parameters of a normal distribution
% plt           true to plot ly and jointly curves (def: false)
% nglog         true to plot negative joint curves (def: false)
%
% Output:
% joint         Combined likelihood at every index
% MLE           Changepoint which maximizes likelihood left/right
%                   generated by p1/p2
% ly            Structure of lhs/rhs likelihoods at every index
% f             Struct with relevant figure handles (def: [])
%
% Ex: (run jointly.m and cpest.m and compare changepoint estimates)
%    p1 = {0 1}; p2 = {0 sqrt(2)};
%    x = cpgen(1000,500,'norm',p1,'norm',p2);
%    [joint,MLE] = JOINTLY(x,p1,p2,true) % compare with km...
%    [~,km] = cpest(x)
%
% See also: cpest.m, cpsumly.m, normly.m
%
% Author: Joel D. Simon
% Contact: jdsimon@princeton.edu
% Last modified: 11-Oct-2017, Version 2017b

% Defaults.
defval('plt',false)
defval('nglog',false)
defval('f',[])

% Preallocate and set RHS/LHS likelihoods at the end points.
lx = length(x);
ly.lhs = NaN(1,lx);
ly.rhs = NaN(1,lx);
ly.lhs(1) = normly(p1{1},p1{2},x);
ly.rhs(lx) = normly(p2{1},p2{2},x);

% Run down length of signal and calculate left/right likelihoods.
for i = 2:lx-1
    lhs = x(1:i);
    rhs = x(i+1:end);
    ly.lhs(i) = normly(p1{1},p1{2},lhs);
    ly.rhs(i) = normly(p2{1},p2{2},rhs);
end

% Combine the lhs/rhs into a joint likelihood function.
joint = ly.lhs'+ly.rhs';
[~,MLE] = max(joint);

% Plot it, maybe.
if plt
    f = plotjointly(joint,ly,p1,p2,nglog);
end
