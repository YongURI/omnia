function ly = normly(mu, sigma, x)
% ly = NORMLY(mu,sigma,x)
%
% Calculates the log-likelihood of the input mu (mean), sigma
% (standard deviation) given the data x, assuming x is i.i.d. and
% generated by a normal distribution with parameters mu and sigma
% (variance = sigma^2).
%
% E.g., ly = log{ L( mu, sigma^ 2 | f(x)~N(mu, sigma^2) ) }, which
% evaluates to equation 4 ("noise"), or 10 ("signal"), in simon+2019.
%
% Input:
% mu, sigma      Mean, standard deviation to test
% x              The data/time series (1D) to test
%
% Output:
% ly             Log-likelihood of mu, sigma given the data x
%
% Ex1: (generate data from N(mu = 0, sigma = 4), test sigma = [1 2 4 8])
%    mu = 4; x = normrnd(0,mu,[1e3,1]);
%    ly1 = NORMLY(0,1,x);
%    ly2 = NORMLY(0,2,x);  
%    ly4 = NORMLY(0,4,x); % This (on average) has the highest likelihood.
%    ly8 = NORMLY(0,8,x);
%    ly4 > max([ly1 ly2 ly8])
%
% Ex2: (compare output with MATLAB's builtin negative(!) normlike.m)
%    mu = randi(1e6); x = normrnd(0,mu,[1e3,1]);
%    ly = NORMLY(0,mu,x);
%    matlab_ly = -normlike([0 mu],x);
%    fprintf('difference from builtin normlike.m = %e\n', ly - matlab_ly)
%
% Cite: Simon, J. D. et al., (2020), BSSA, doi: 10.1785/0120190173
% 
% See also: normlys.m, normlystest.m, normlike.m
%
% Author: Joel D. Simon
% Contact: jdsimon@princeton.edu
% Last modified: 05-Feb-2018, Version 2017b

% Sanity.
if length(sigma)~=1 || length(mu)~=1 
    error(['Only input one of each ''mu'', ''sigma''. Use normlys.m ' ...
           'to test input arrays.'])
end

if ~isnumeric([mu ; sigma ; x(:)])
    error('All inputs must be numeric.')
end

if sigma == 0
    error('Input argument ''sigma'' cannot equal zero.')
end

% Main.
n = length(x);

% Equation 4 ("noise") or 10 ("signal") in Simon & Simons, 2018.
ly = -0.5*(n*log(2*pi) + n*log(sigma^2) + (1/sigma^2)*sum((x-mu).^2));

% MATLAB's version.
%ly = -normlike([mu sigma], x);
