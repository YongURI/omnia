function [lys, mu, sigma] = normlys(mus, sigmas, x)
% [lys,mu,sigma] = NORMLYS(mus,sigmas,x)
%
% Calculates the log-likelihood for each mu, sigma combination for a
% range of mus, sigmas, given the data x, assuming x is i.i.d. and
% generated by a Gaussian (normal) distribution. Returns the maximum
% likelihood estimate (MLE) combination of parameters mu, sigma from
% the input ranges tested.
%
% Input: 
% mus             Range of means to test (def: 0)
% sigmas          Range of standard deviations to test 
% x               The data to test (1D)
%
% Output:
% lys             Log-likelihood at every mu, sigma tested
% mu              MLE of mu in range of input 'mus'
% sigma           MLE of sigma in range of input 'sigmas'         
%
% Ex: (true [mu, sigma] of generating function is [0, 2]) 
%     x = normrnd(0,2,[1 1000]);    % generate random data
%     mus = [-2:0.1:2];              % test mu range -2:2
%     sigmas = [0.1:0.1:4];         % test sigma range 0.1:4
%     [lys,mu,sigma] = NORMLYS(mus,sigmas,x)
%
% Cite: Simon, J. D. et al., (2020), BSSA, doi: 10.1785/0120190173
%
% See also: normlystest.m, normly.m
%
% Author: Joel D. Simon
% Contact: jdsimon@princeton.edu
% Last modified: 03-Jan-2018, Version 2017b

% Default.
defval('mus',0)

% Allocate.
lys = zeros(length(mus), length(sigmas));

% Calculate log-likelihood at every sigma.
for i = 1:length(mus)
    for j = 1:length(sigmas)
        lys(i,j) = normly(mus(i), sigmas(j), x);

    end
end

% Find maximum mu, sigma.
[max_val, mu_index] = max(max(lys'));
mu = mus(mu_index);
sigma = sigmas(find(lys(mu_index,:) == max_val));
